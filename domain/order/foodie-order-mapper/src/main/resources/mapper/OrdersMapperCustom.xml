<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="wiki.laona.cloud.order.mapper.OrdersMapperCustom">

    <resultMap id="myOrdersVO" type="wiki.laona.cloud.order.pojo.vo.MyOrdersVO">
        <id column="orderId" property="orderId"/>
        <result column="orderStatus" property="orderStatus"/>
        <result column="payMethod" property="payMethod"/>
        <result column="postAmount" property="postAmount"/>
        <result column="realPayAmount" property="realPayAmount"/>
        <result column="isComment" property="isComment"/>
        <result column="createdTime" property="createdTime"/>

        <collection property="subOrderItemList"
                    select="getSubItems"
                    column="orderId"
                    ofType="wiki.laona.cloud.order.pojo.vo.MySubOrderItemVO">

            <result column="itemId" property="itemId"/>
            <result column="itemName" property="itemName"/>
            <result column="itemImg" property="itemImg"/>
            <result column="itemSpecName" property="itemSpecName"/>
            <result column="price" property="price"/>
        </collection>
    </resultMap>

    <select id="getSubItems" resultType="wiki.laona.cloud.order.pojo.vo.MySubOrderItemVO" parameterType="string">
        select oi.id             as itemId,
               oi.item_name      as itemName,
               oi.item_img       as itemImg,
               oi.item_spec_name as itemSpecName,
               oi.price          as price
        from order_items oi
        where oi.order_id = #{orderId}
    </select>

    <select id="queryMyOrders" parameterType="map" resultMap="myOrdersVO">
        select
            od.id as orderId,
            od.created_time as createdTime,
            od.pay_method as payMethod,
            od.real_pay_amount as realPayAmount,
            od.post_amount as postAmount,
            os.order_status as orderStatus,
            od.is_comment as isComment
        from orders od
                 LEFT JOIN order_status os
                           ON os.order_id = od.id
        where od.user_id = #{paramsMap.userId}
            and od.is_delete = 0
        <if test=" paramsMap.orderStatus != null and paramsMap.orderStatus != '' ">
            and os.order_status = #{paramsMap.orderStatus}
        </if>
        ORDER BY od.created_time DESC
    </select>

    <select id="queryMyOrdersDotNotUse" parameterType="map" resultMap="myOrdersVO">
        select
            od.id as orderId,
            od.created_time as createdTime,
            od.pay_method as payMethod,
            od.real_pay_amount as realPayAmount,
            od.post_amount as postAmount,
            os.order_status as orderStatus,
            oi.item_id as itemId,
            oi.item_name as itemName,
            oi.item_img as itemImg,
            oi.item_spec_name as itemSpecName,
            oi.price as price
        from orders od
                 LEFT JOIN order_status os
                           ON os.order_id = od.id
                 LEFT JOIN order_items oi
                           ON os.order_id = oi.order_id
        where od.user_id = #{paramsMap.userId}
        and od.is_delete = 0
        <if test=" paramsMap.orderStatus != null and paramsMap.orderStatus != '' ">
            os.order_status = #{paramsMap.orderStatus}
        </if>
        ORDER BY od.created_time DESC
    </select>

    <select id="getMyOrderStatusCount" parameterType="map" resultType="int">
        SELECT
            COUNT( 1 )
        FROM
            orders o
                LEFT JOIN order_status os ON o.id = os.order_id
        WHERE
            o.user_id = #{paramsMap.userId}
            AND os.order_status = #{paramsMap.orderStatus}
            <if test=" paramsMap.isComment  != null">
                AND o.is_comment = #{paramsMap.isComment}
            </if>
    </select>

    <select id="getMyOrderTrend" parameterType="map" resultType="wiki.laona.cloud.order.pojo.OrderStatus">
        SELECT
            os.order_id as orderId,
            os.order_status as orderStatus,
            os.created_time as createdTime,
            os.pay_time as payTime,
            os.deliver_time as deliverTime,
            os.success_time as successTime,
            os.close_time as closeTime,
            os.comment_time as commentTime
        FROM
            orders o
                LEFT JOIN order_status os ON o.id = os.order_id
        WHERE
            o.user_id = #{paramsMap.userId}
          AND o.is_delete = 0
          AND os.order_status in (20, 30, 40)
        order by
            os.order_id DESC
    </select>

</mapper>
